name: Build Binaries

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux-x64
            name: ccusage-linux-x64
          - os: macos-latest
            target: darwin-x64
            name: ccusage-macos-x64
          - os: macos-latest
            target: darwin-arm64
            name: ccusage-macos-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test
        continue-on-error: true

      - name: Build project
        run: bun run build

      - name: Create standalone binary
        run: |
          bun build ./dist/index.js \
            --compile \
            --target=bun-${{ matrix.target }} \
            --outfile=${{ matrix.name }}

      - name: Verify binary size
        run: |
          echo "Binary size: $(du -h ${{ matrix.name }} | cut -f1)"

      - name: Test binary
        run: |
          chmod +x ./${{ matrix.name }}
          # Create dummy Claude directory to prevent error
          mkdir -p ~/.config/claude/projects
          ./${{ matrix.name }} --version || echo "Binary created successfully"
          ./${{ matrix.name }} --help || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}
          retention-days: 7
